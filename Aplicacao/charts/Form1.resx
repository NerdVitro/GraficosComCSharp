<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>